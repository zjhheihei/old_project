//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#ifndef _MOD_SYSTEMTICK_H
#define _MOD_SYSTEMTICK_H
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
//延时类型
typedef enum
{
    Type_Second        =0x00,  //1s 周期
    Type_Minute        =0x01,  //1m 周期
}DelayType_Def;
//-----------------------------------------------------------------------------
//延时数据
typedef struct
{
    DelayType_Def  DelayType;
    INT16U    DelayClock;     //延时时间
    INT16U    KeepSysTick;    //上次的计数值
}DelayTickClk_Def;
//-----------------------------------------------------------------------------
typedef struct
{
    BOOLEAN   OnceTrigger;    //一次触发
    INT16U    DelayClock;     //延时时间
    INT16U    KeepSysTick;    //上次的计数值
}MilliscondTickClk_Def;
//-----------------------------------------------------------------------------
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//------------------------------------------------------------------------------
//Task
//------------------------------------------------------------------------------
//Event
//------------------------------------------------------------------------------
//Status
//------------------------------------------------------------------------------
//Function
//名称: 系统时钟配置
//功能: 初始化调用
//入口: 无
//
//出口: 无
void mod_systick_configure(void);
//------------------------------------------------------------------------------
//名称: 系统时钟运行
//功能: 主循环调用
//入口: 无
//
//出口: 无
void systickTimeRun_task(void);
//------------------------------------------------------------------------------
//名称: 系统时钟运行
//功能: 主循环调用
//入口: 无
//
//出口: 1ms的系统时钟节拍
INT16U GetSysTickMillisecond(void);
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//其他定时数据处理(Second，minute)
//------------------------------------------------------------------------------
//名称:延时时钟运行
//入口:
//     _In_Me,延时结构体指针               <<--- 传入

//
//出口:延时完成 BN_TRUE--完成

BOOLEAN DelayTickClockRun(DelayTickClk_Def* _In_Me);
//------------------------------------------------------------------------------
//名称:延时时间重新载入
//功能:重置倒计时的延时时间
//入口:
//     _In_Me,延时结构体指针               <<--- 传入
//     _In_ReloadData,延时时间             <<--- 传入

//
//出口:无

void ReloadDealyTickClock(DelayTickClk_Def* _In_Me,INT16U _In_ReloadData);
//------------------------------------------------------------------------------
//名称:延时完成判断
//入口:
//     _In_Me,延时结构体指针               <<--- 传入

//
//出口:延时完成 BN_TRUE--完成

BOOLEAN DelayTickClockFinished(DelayTickClk_Def* _In_Me);
//------------------------------------------------------------------------------
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//ms定时数据处理
//------------------------------------------------------------------------------
//名称:毫秒级延时时钟运行
//入口:
//     _In_Me,延时结构体指针               <<--- 传入

//
//出口:延时完成 BN_TRUE--完成

BOOLEAN MillisecondTickClockRun(MilliscondTickClk_Def* _In_Me);
//------------------------------------------------------------------------------
//名称:毫秒级延时时间重新载入
//功能:重置倒计时的延时时间
//入口:
//     _In_Me,延时结构体指针               <<--- 传入
//     _In_ReloadData,延时时间             <<--- 传入

//
//出口:无

void ReloadMillisecondTickClock(MilliscondTickClk_Def* _In_Me,INT16U _In_ReloadData);
//------------------------------------------------------------------------------
//名称:毫秒级延时完成判断
//入口:
//     _In_Me,延时结构体指针               <<--- 传入

//
//出口:延时完成 BN_TRUE--完成

BOOLEAN GetMillisecondTickClockFninshed(MilliscondTickClk_Def* _In_Me);
//------------------------------------------------------------------------------
//名称:毫秒级单次延时完成判断
//功能:判断延时是否完成一次,延时完成后，仅一次读取有效
//入口:
//     _In_Me,延时结构体指针               <<--- 传入

//
//出口:单次完成 BN_TRUE--完成

BOOLEAN GetMillsecondOnceTriggerFinished(MilliscondTickClk_Def* _In_Me);
//------------------------------------------------------------------------------
#endif
//++++++++++++++++++++++++++++++++++End+++++++++++++++++++++++++++++++++++++++++