//++++++++++++++++++++++++++++++start+++++++++++++++++++++++++++++++++++++++++++
#ifndef _MOD_RELAY_H
#define _MOD_RELAY_H
//------------------------------E N D-------------------------------------------



//------------------------------E N D-------------------------------------------
#define WARM_DELAY_TIME    25
#define RELAY_DELAY_TIME   20
#define FAN_DELAY_TIME     30
#define RELAY_RECLOSE_TIME 0



typedef enum
{
    RELAY_FLOOR  = 0,
    RELAY_ASSIST,
}relay_number_t;

//++++++++++++++++++++++++++++++start+++++++++++++++++++++++++++++++++++++++++++
//func
//名称: 继电器开启带延时功能
//功能: 应用模块调用    
//入口: emNumber        继电器编号             <<-------------------------传入
//      _100milliscond  延时开启时间           <<-------------------------传入
//出口: 无
void mod_relay_on(relay_number_t emNumber,INT16U _100milliscond);

//++++++++++++++++++++++++++++++start+++++++++++++++++++++++++++++++++++++++++++
//Task
//名称: 继电器关闭带延时功能
//功能: 应用模块调用     
//入口:  emNumber        继电器编号          <<-------------------------传入
//      _in_100msOffDelay延时关闭时          <<-------------------------传入
//出口: 无
void mod_relay_off(relay_number_t emNumber,INT16U _100milliscond);

//++++++++++++++++++++++++++++++start+++++++++++++++++++++++++++++++++++++++++++
//Task
//名称: 继电器扫描任务
//功能: 放入主函数或应用模块定时调用    
//      milliscond                            <<-------------------------传入
//出口: 无
//void Mod_Relay_ScanTask(void);
void mod_relay_scanTask(INT16U milliscond);
//++++++++++++++++++++++++++++++start+++++++++++++++++++++++++++++++++++++++++++
//------------------------------E N D-------------------------------------------


#endif


//-----------------------Mod_RelayPWM.h--END------------------------------------
