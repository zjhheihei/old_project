//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#ifndef _MOD_MODBUSSLAVE_H
#define _MOD_MODBUSSLAVE_H
//-----------------------------------------------------------------------------

#include "..\Depend\BSP_SlaveUart.h"

//++++++++++++++++++++++++++++++start+++++++++++++++++++++++++++++++++++++++++++
//*******************寄存器长度和发送接收完成事件宏定义*************************
#define   RxFinishEvent   0x00
#define   TxFinishEvent   0xff
//------------------------------E N D-------------------------------------------

//++++++++++++++++++++++++++++++start+++++++++++++++++++++++++++++++++++++++++++
//****************************超时定义******************************************
typedef enum
{
    HardwareSw  = 0x00, 
    SoftwareSw  = 0x01, 
}TimeOutSwitch_Def;                 
//------------------------------E N D-------------------------------------------


//**************************任务状态定义****************************************
typedef enum
{
    UsartMod_ReStart      =0x00,
    Rx_Wait               =0x01,
    Tx_Wait               =0x02,
    Tx_Sending            =0x03,
    Tx_SendFinish         =0x04,
}TaskStatus_Def;                 //Modbus任务状态
//------------------------------E N D-------------------------------------------


//++++++++++++++++++++++++++++++start+++++++++++++++++++++++++++++++++++++++++++
//****************************校验定义******************************************
typedef enum
{
    NoneParity        = 0x00,
    EvenParity        = 0x01,
    OddParity         = 0x02,
}Parity_Def;                
//------------------------------E N D-------------------------------------------


//++++++++++++++++++++++++++++++start+++++++++++++++++++++++++++++++++++++++++++
//****************************校验定义******************************************
typedef enum
{
    Bit_1_0        = 0x00,
    Bit_1_5        = 0x01,
    Bit_2_0        = 0x02,
}StopBits_Def;                
//------------------------------E N D-------------------------------------------

//++++++++++++++++++++++++++++++start+++++++++++++++++++++++++++++++++++++++++++
//***************************Mod参数定义****************************************
typedef struct
{
    INT8U                   SlaveAddress;
    INT16U                  Baudrate;
    INT32U                  CLK;
    Parity_Def              Parity;
    StopBits_Def            StopBits;
    BOOLEAN                 UsartSoftConfigureEvent;
    BOOLEAN                 UsartClkChangEvent;
    INT8U                   Buff[256];
    TaskStatus_Def          TaskStatus;
    TimeOutSwitch_Def       TimeOutSwitch;
    void(*WriteRegister)(INT16U _In_RegAddr,INT8U _In_RegLength,INT8U* _In_pDataBuff);
    void(*ReadRegister)(INT16U _In_RegAddr,INT8U _In_RegLength,INT8U* _Out_pDataBuff); 
}SlaveModbusMod_Parameter_Def;
//------------------------------E N D-------------------------------------------


//++++++++++++++++++++++++++++++start+++++++++++++++++++++++++++++++++++++++++++
//Init
//名称:  配置地址、波特率、校验方式、软件配置事件和读写寄存器事件。
//功能:  给APP层检测软件改变的函数使用
//入口:  结构体指针 
//        *_In_me  <<-------------------------------------------传入

//出口:  无
void Mod_SlaveModbusUsartParameterConfigure(SlaveModbusMod_Parameter_Def *_In_me);
//------------------------------E N D-------------------------------------------


//++++++++++++++++++++++++++++++start+++++++++++++++++++++++++++++++++++++++++++
//Task
//名称:  Modbus从机扫描
//功能:  处理整个Modbus通信任务
//入口: 无         
//出口:  无
void Mod_SalveModbus_ScanTask(void);
//------------------------------E N D-------------------------------------------



#endif
//++++++++++++++++++++++++++++++++++End+++++++++++++++++++++++++++++++++++++++++